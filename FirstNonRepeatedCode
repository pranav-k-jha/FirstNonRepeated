function firstNonRepeated(s: string): string {
    const charCountMap: Map<string, number> = new Map();

    // Count the occurrences of each character in the string
    for (const char of s) {
        charCountMap.set(char, (charCountMap.get(char) || 0) + 1);
    }

    // Find the first non-repeated character
    for (const char of s) {
        if (charCountMap.get(char) === 1) {
            return char;
        }
    }

    // If no non-repeated character found, return an empty string
    return "";
}

// Test cases
console.log(firstNonRepeated("hello")); // Output: "h"
console.log(firstNonRepeated("aabcc")); // Output: "b"
console.log(firstNonRepeated("aabbcc")); // Output: ""


// This TypeScript function first creates a character count map to store the occurrences of each character in the input string. Then it iterates through the string again to find the first character with a count of 1 in the map, which indicates it is the first non-repeated character. If no such character is found, it returns an empty string.
